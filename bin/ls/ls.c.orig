#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <dirent.h>
#include <sys/defs.h>
<<<<<<< HEAD
#include <sys/stat.h>
#include <sys/user.h>
||||||| merged common ancestors
=======
#include <sys/user.h>
>>>>>>> origin/proj_pempt

char *file_type = "-lscbdfc";
int main(int argc, char* argv[], char* envp[]) {

<<<<<<< HEAD
	char buff[NAME_MAX+1];
	memset(buff, '\0', NAME_MAX+1);
	if(argc == 1){
		getcwd(buff, NAME_MAX+1);
	}else if(argc == 2){
		strcpy(buff, argv[1]);
	}else{
		printf("Multiple directories not supported\n");
	}
	DIR *dir = opendir(buff);
	struct dirent *dirent;
	uint32_t size = 0;

	while ((dirent = readdir(dir))) {
			printf("%crwx--x--x    %4dKB     %s  %s\n", file_type[dirent->type], (dirent->size)/1024,dirent->fowner, dirent->d_name);
				size = size + dirent->size;
	        //printf("%s  \n", dirent->d_name);
	    }
	if(dir != NULL){
		printf("drwx--x--x    %4dKB     %s  %s\n", size/1024,"admin", ".");
		printf("drwx--x--x    %4dKB     %s  %s\n", 0,"admin", "..");
	}else{
		printf("ls: %s: No such file or directory,\n", argv[1]);
	}
	return 0;

//	char* m = (char*)malloc(100);
//	char* k = (char*)malloc(100);
//	printf("allocated :  %p\n", m);
//	printf("allocated :  %p\n", k);



||||||| merged common ancestors
  /*
   int    num_dirs;
   int    fd;
   struct dirent  dir_struct[2048];
   struct dirent* p;
   char   dir_path[NAME_MAX+1];

   if(argc == 1) {
     getcwd(dir_path, (size_t) NAME_MAX+1);
     fd = open(dir_path, O_RDONLY | O_DIRECTORY);
   }
   else {
     fd = open(argv[1], O_RDONLY | O_DIRECTORY);
   }

   if(fd == -1) {
     puts("Directory not found");
     return 1;
   }

   num_dirs = getdents(fd, dir_struct, 1024);

   int pos = 0;
   while(pos < num_dirs) {
     p = dir_struct + pos;
     puts(p->d_name);
     pos += p->reclen;
   }

   close(fd);

   return 0;
   */

   char buff[500];
 getcwd(buff, 500);
 //puts("*********");
 //puts("Executing ls for /");


 int fidx = open("/bin", 0);


 struct dirent dir_buff ;
 struct dirent* ptr_dir = &dir_buff;
 ptr_dir->offset=fidx;

 while(getdents(fidx, ptr_dir, 100) !=-1){
     puts(ptr_dir->d_name);


 }
 //puts("*********");

=======
	char buff[NAME_MAX+1];
	memset(buff, '\0', NAME_MAX+1);
	if(argc == 1){
		getcwd(buff, NAME_MAX+1);
	}else if(argc == 2){
		strcpy(buff, argv[1]);
	}else{
		printf("Multiple directories not supported\n");
	}

	DIR *dir = opendir(buff);
	struct dirent *dirent;
	uint32_t size = 0;

	while ((dirent = readdir(dir))) {
			printf("%crwx--x--x    %4dKB     %s  %s\n", file_type[dirent->type], (dirent->size)/1024,dirent->fowner, dirent->d_name);
				size = size + dirent->size;
	        //printf("%s  \n", dirent->d_name);
	    }
			
	if(dir != NULL){
		printf("drwx--x--x    %4dKB     %s  %s\n", size/1024,"admin", ".");
		printf("drwx--x--x    %4dKB     %s  %s\n", 0,"admin", "..");
	}else{
		printf("ls: %s: No such file or directory,\n", argv[1]);
	}
	return 0;
>>>>>>> origin/proj_pempt
}
